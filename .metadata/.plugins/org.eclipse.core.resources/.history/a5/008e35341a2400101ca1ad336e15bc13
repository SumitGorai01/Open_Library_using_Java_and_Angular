package com.project.openlibrary.controller;

import java.io.File;
import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import com.project.openlibrary.entity.Book;
import com.project.openlibrary.service.BookService;

@Controller
@RequestMapping("/book")
@CrossOrigin("*")
public class BookController {

    @Autowired
    private BookService bookService;

    // File Upload Paths
    public static final String IMAGE_UPLOAD_DIR = "uploads/images/";
    public static final String PDF_UPLOAD_DIR = "uploads/pdfs/";

    // add book
    @PostMapping("/")
    public ResponseEntity<?> addBook(
            @RequestPart("book") Book book,
            @RequestPart(value = "image", required = false) MultipartFile image,
            @RequestPart(value = "bookPdf", required = false) MultipartFile bookPdf
    ) throws IOException {

        // Save Image
        if (image != null && !image.isEmpty()) {
            String imageFileName = System.currentTimeMillis() + "_" + image.getOriginalFilename();
            File imageFile = new File(IMAGE_UPLOAD_DIR + imageFileName);
            image.transferTo(imageFile);
            book.setImage(imageFileName);
        }

        // Save Book PDF
        if (bookPdf != null && !bookPdf.isEmpty()) {
            String pdfFileName = System.currentTimeMillis() + "_" + bookPdf.getOriginalFilename();
            File pdfFile = new File(PDF_UPLOAD_DIR + pdfFileName);
            bookPdf.transferTo(pdfFile);
            book.setBookPdf(pdfFileName);
        }

        Book savedBook = this.bookService.addBook(book);
        return ResponseEntity.ok(savedBook);
    }

    // get book
    @GetMapping("/{bookId}")
    public ResponseEntity<Book> getBook(@PathVariable("bookId") Integer bookId) {
        return ResponseEntity.ok(this.bookService.getBook(bookId));
    }

    // get all books
    @GetMapping("/")
    public ResponseEntity<?> getAllBooks() {
        return ResponseEntity.ok(this.bookService.getAllBooks());
    }

    // update book (Simple Update without file upload)
    @PutMapping("/")
    public ResponseEntity<Book> updateBook(@RequestPart("book") Book book) {
        Book updatedBook = this.bookService.updateBook(book);
        return ResponseEntity.ok(updatedBook);
    }

    // delete book
    @DeleteMapping("/{bookId}")
    public ResponseEntity<?> deleteBook(@PathVariable("bookId") Integer bookId) {
        this.bookService.deleteBook(bookId);
        return ResponseEntity.ok("Book deleted successfully!");
    }
}
